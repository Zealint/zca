
  ****          ****
  **   *********  **   ZCA - Zeal Computer Arithmetic
  **  **     **   **   Учебный проект по длинной арифметике
  **        **    **   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  **       **     **   Комментарии не могут полность отразить   
  **   ********   **   весь смысл кода, поэтому для полного     
  **     **       **   его понимания нужно смотреть "сериал"
  **    **        **   Беседы о программировании :: Длинная
  **   **     **  **   арифметика (ссылка на блог ниже).
  **  *********   **
  ****          ****

              [АВТОР] Караваев Артём Михайлович
  [ЭЛЕКТРОННЫЙ АДРЕС] zealint@zealcomputing.ru
               [САЙТ] http://zealcomputing.ru
             [СОЗДАН] 25.01.2016
             [ВЕРСИЯ] 0.08 от 12.03.2016

  [ИСТОРИЯ ИЗМЕНЕНИЙ]

  ==== v0.00 == 25.01.2016 ====
  * Проект создан автором.
  * Определены базовые типы limb_t, sign_t, константы 
  LIMB_SIZE и LIMB_BITS. Размер лимба задан равным 32 бита.
  * Создан класс vec_t для работы с векторами и функции 
  сравнения и нормализации, а также оператор присваивания.
  * Создан простейший генератор псевдослучайных чисел и 
  векторов rnd, на основе класса rnd_t.

  ==== v0.01 == 27.01.2016 ====
  * Исправлены ошибки в конструкторе и операторе перемещения.
  * Добавлен оператор + и функция add для трёх объектов.
  * Реализованы 3 способа сложения (файл add.cpp)  
  * Создан файл misc.cpp для некоторых удобных функций.
  * Добавлен двойной лимб dlimb_t и константа LIMB_T_MAX.

  ==== v0.02 == 01.02.2016 ====
  * Немного переосмыслена логика файла add.cpp.
    Теперь можно подключать ассемблерные файлы,
    но компилировать через makefile с опцией asm.    
  
  ==== v0.03 == 02.02.2016 ====
  * Добавлены функции сложения "на месте".
  * Добавлен оператор += и функция add для двух объектов.
  * Переосмыслена логика оператора = (копирование).
  * Немного изменена логика тестирования (теперь
    память не перераспределяется на каждом тесте, 
    а всё происходит в одном и том же векторе, теперь
    kernel-time почти всегда равено 0).

  ==== v0.04 == 04.02.2016 ====
  * Реализованы все функции для вычитания векторов.
  * Добавлены файлы sub.cpp и sub.asm.

  ==== v0.05 == 20.02.2016 ====
  * Определён базовый тип offset_t для размера со знаком.
  * Создан класс num_t для хранения векторов со знаком,
    для него реализованы все функции.
  * Добавлена функция fullSub, которая вычитает из большего
    вектора меньший, делая выбор через сравнение.

  ==== v0.06 == 29.02.2016 ====
  * Добавлены файлы mul.cpp и mul.asm для функций умножения векторов.
  * Добавлены функции mul1 и операторы * и *= для умножения
    вектора на лимб.

  ==== v0.07 == 09.03.2016 ====
  * Добавлены функции addmul и submul для класса vec_t

  ==== v0.08 == 12.03.2016 ====
  * Добавлены функции тривиального умножения вектора на вектор.

